version: 2.1
commands:
  compile:
    description: Compiles and sets-up common environment vars
    steps:
      - checkout
      - run: ./.build.scripts/compile.sh
      - run:
          name: Setup env vars
          command: |
            echo 'export CWD=`eval echo "${CIRCLE_WORKING_DIRECTORY}"`' >> $BASH_ENV
  run-tests:
    description: Runs the tests
    steps:
      - run:
          name: Run tests with env vars
          command: php run-xdebug-tests.php -q -x --show-diff

jobs:
  "PHP 8 0 without opcache":
    docker:
      - image: circleci/php:8.0.2-cli-buster
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PW
    steps:
      - checkout
      - compile
      - run:
          name: Setup extra env vars
          command: |
            echo 'export TEST_PHP_ARGS="-n -d foo=yes -d zend_extension=${CWD}/modules/xdebug.so"' >> $BASH_ENV
      - run-tests
    environment:
      REPORT_EXIT_STATUS: 1

  "PHP 8 0 with opcache":
    docker:
      - image: circleci/php:8.0.2-cli-buster
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PW
    steps:
      - checkout
      - compile
      - run:
          name: Setup extra env vars
          command: |
            echo 'export TEST_PHP_ARGS="-n -d foo=yes -d zend_extension=opcache.so -d opcache.enable=1 -d opcache.enable_cli=1 -d zend_extension=${CWD}/modules/xdebug.so"' >> $BASH_ENV
      - run-tests
    environment:
      REPORT_EXIT_STATUS: 1

  "PHP 7 4 without opcache":
    docker:
      - image: circleci/php:7.4.11-cli-buster
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PW
    steps:
      - checkout
      - compile
      - run:
          name: Setup extra env vars
          command: |
            echo 'export TEST_PHP_ARGS="-n -d foo=yes -d zend_extension=${CWD}/modules/xdebug.so"' >> $BASH_ENV
      - run-tests
    environment:
      REPORT_EXIT_STATUS: 1

  "PHP 7 4 with opcache":
    docker:
      - image: circleci/php:7.4.11-cli-buster
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PW
    steps:
      - checkout
      - compile
      - run:
          name: Setup extra env vars
          command: |
            echo 'export TEST_PHP_ARGS="-n -d foo=yes -d zend_extension=opcache.so -d opcache.enable=1 -d opcache.enable_cli=1 -d zend_extension=${CWD}/modules/xdebug.so"' >> $BASH_ENV
      - run-tests
    environment:
      REPORT_EXIT_STATUS: 1

  "PHP 7 3 without opcache":
    docker:
      - image: circleci/php:7.3.23-cli-stretch
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PW
    steps:
      - checkout
      - compile
      - run:
          name: Setup extra env vars
          command: |
            echo 'export TEST_PHP_ARGS="-n -d foo=yes -d zend_extension=${CWD}/modules/xdebug.so"' >> $BASH_ENV
      - run-tests
    environment:
      REPORT_EXIT_STATUS: 1

  "PHP 7 3 with opcache":
    docker:
      - image: circleci/php:7.3.23-cli-stretch
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PW
    steps:
      - checkout
      - compile
      - run:
          name: Setup extra env vars
          command: |
            echo 'export TEST_PHP_ARGS="-n -d foo=yes -d zend_extension=opcache.so -d opcache.enable=1 -d opcache.enable_cli=1 -d zend_extension=${CWD}/modules/xdebug.so"' >> $BASH_ENV
      - run-tests
    environment:
      REPORT_EXIT_STATUS: 1

  "PHP 7 2 without opcache":
    docker:
      - image: circleci/php:7.2.34-cli-stretch
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PW
    steps:
      - checkout
      - compile
      - run:
          name: Setup extra env vars
          command: |
            echo 'export TEST_PHP_ARGS="-n -d foo=yes -d zend_extension=${CWD}/modules/xdebug.so"' >> $BASH_ENV
      - run-tests
    environment:
      REPORT_EXIT_STATUS: 1

  "PHP 7 2 with opcache":
    docker:
      - image: circleci/php:7.2.34-cli-stretch
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PW
    steps:
      - checkout
      - compile
      - run:
          name: Setup extra env vars
          command: |
            echo 'export TEST_PHP_ARGS="-n -d foo=yes -d zend_extension=opcache.so -d opcache.enable=1 -d opcache.enable_cli=1 -d zend_extension=${CWD}/modules/xdebug.so"' >> $BASH_ENV
      - run-tests
    environment:
      REPORT_EXIT_STATUS: 1


workflows:
  version: 2
  testing:
    jobs:
      - "PHP 8 0 without opcache"
      - "PHP 8 0 with opcache"
      - "PHP 7 4 without opcache"
      - "PHP 7 4 with opcache"
      - "PHP 7 3 without opcache"
      - "PHP 7 3 with opcache"
      - "PHP 7 2 without opcache"
      - "PHP 7 2 with opcache"
